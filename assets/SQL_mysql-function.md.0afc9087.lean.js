import{_ as a,o as l,c as n,O as p}from"./chunks/framework.54bd01e4.js";const d=JSON.parse('{"title":"MySQL中的函数","description":"","frontmatter":{},"headers":[],"relativePath":"SQL/mysql-function.md","filePath":"SQL/mysql-function.md"}'),o={name:"SQL/mysql-function.md"};function e(t,s,r,c,y,E){return l(),n("div",null,s[0]||(s[0]=[p(`<h1 id="mysql中的函数" tabindex="-1">MySQL中的函数 <a class="header-anchor" href="#mysql中的函数" aria-label="Permalink to &quot;MySQL中的函数&quot;">​</a></h1><h2 id="字符串函数" tabindex="-1">字符串函数 <a class="header-anchor" href="#字符串函数" aria-label="Permalink to &quot;字符串函数&quot;">​</a></h2><ul><li>concat(s1,s2,...sn) 字符串拼接</li><li>lower(str) 将字符串str全部转为小写</li><li>upper(str) 将字符串str全部转为大写</li><li>lpad(str, n, pad) 左填充，用字符串pad对str的左边进行填充，达到n个字符串长度</li><li>rpad(str, n, pad) 右填充，用字符串怕的对str的右边进行填充，达到n个字符串长度</li><li>trim(str) 去掉字符串str首尾的空格</li><li>substring(str, start, len) 返回从字符串str 从start起的len个长度的字符串；索引start从1开始</li></ul><div class="language-SQL vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">SQL</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 员工工号统一为5位数，不足5位的在前面补0；如：00001</span></span>
<span class="line"><span style="color:#F97583;">update</span><span style="color:#E1E4E8;"> employee </span><span style="color:#F97583;">set</span><span style="color:#E1E4E8;"> workno </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> lpad(workno, </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;0&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 员工工号统一为5位数，不足5位的在前面补0；如：00001</span></span>
<span class="line"><span style="color:#D73A49;">update</span><span style="color:#24292E;"> employee </span><span style="color:#D73A49;">set</span><span style="color:#24292E;"> workno </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> lpad(workno, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;0&#39;</span><span style="color:#24292E;">);</span></span></code></pre></div><h2 id="数值函数" tabindex="-1">数值函数 <a class="header-anchor" href="#数值函数" aria-label="Permalink to &quot;数值函数&quot;">​</a></h2><ul><li>ceil(x) 向上取整</li><li>floor(x) 向下取整</li><li>mod(x, y) 返回x/y的模（余数）</li><li>rand() 返回0-1的随机数</li><li>round(x, y) 求参数x四舍五入的值，保留y位小数</li></ul><div class="language-SQL vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">SQL</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 生成一个六位数的随机验证码</span></span>
<span class="line"><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> rpad(</span><span style="color:#79B8FF;">round</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">rand</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000000</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">), </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;0&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 生成一个六位数的随机验证码</span></span>
<span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> rpad(</span><span style="color:#005CC5;">round</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">rand</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000000</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">), </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;0&#39;</span><span style="color:#24292E;">);</span></span></code></pre></div><h2 id="日期函数" tabindex="-1">日期函数 <a class="header-anchor" href="#日期函数" aria-label="Permalink to &quot;日期函数&quot;">​</a></h2><ul><li>curdate() 当前日期</li><li>curtime() 当前时间</li><li>now() 当前日期和时间</li><li>year(date) 获取指定date的年份</li><li>month(date) 获取指定date的月份</li><li>day(date) 获取指定date的日期</li><li>date_add(date, interval expr type) 返回一个日期/时间值加上一个时间间隔expr后的时间值；type有 day/month/year</li><li>datediff(date1, date2) 返回起始时间date1和结束时间date2之间的天数；使用date1-date2</li></ul><div class="language-SQL vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">SQL</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 当前时间 向后10天</span></span>
<span class="line"><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> date_add(</span><span style="color:#F97583;">now</span><span style="color:#E1E4E8;">(), interval </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">day</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">-- 查询所有员工入职天数，并根据入职天数倒序排序</span></span>
<span class="line"><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">datediff</span><span style="color:#E1E4E8;">(curdate(), entrydate) </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> entrydays </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> employee </span><span style="color:#F97583;">order by</span><span style="color:#E1E4E8;"> entrydays </span><span style="color:#F97583;">desc</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 当前时间 向后10天</span></span>
<span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> date_add(</span><span style="color:#D73A49;">now</span><span style="color:#24292E;">(), interval </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">day</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">-- 查询所有员工入职天数，并根据入职天数倒序排序</span></span>
<span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">datediff</span><span style="color:#24292E;">(curdate(), entrydate) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> entrydays </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> employee </span><span style="color:#D73A49;">order by</span><span style="color:#24292E;"> entrydays </span><span style="color:#D73A49;">desc</span><span style="color:#24292E;">;</span></span></code></pre></div><h2 id="流程控制函数" tabindex="-1">流程控制函数 <a class="header-anchor" href="#流程控制函数" aria-label="Permalink to &quot;流程控制函数&quot;">​</a></h2><ul><li>if(value, t, f) 如果value为true，返回t，否则返回f</li><li>ifnull(value1, value2) 如果value1不为null，返回value1，否则返回value2</li><li>case when val1 then res1 ... else default end 如果val1为true，返回res1，...否则返回default默认值</li><li>case expr when val1 then res1 ... else default end 如果expr的值等于val1,返回res1...否则返回default默认值</li></ul><div class="language-SQL vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">SQL</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 查询员工姓名和工作地址，（北上广显示一线城市，其他显示二线城市）</span></span>
<span class="line"><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">, (</span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> workaddress </span><span style="color:#F97583;">when</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;北京&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">then</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;一线城市&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">when</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;上海&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">then</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;一线城市&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">when</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;广州&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">then</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;一线城市&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;二线城市&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">end</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> employee;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 查询员工姓名和工作地址，（北上广显示一线城市，其他显示二线城市）</span></span>
<span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">, (</span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> workaddress </span><span style="color:#D73A49;">when</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;北京&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">then</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;一线城市&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">when</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;上海&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">then</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;一线城市&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">when</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;广州&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">then</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;一线城市&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;二线城市&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">end</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> employee;</span></span></code></pre></div>`,13)]))}const h=a(o,[["render",e]]);export{d as __pageData,h as default};
