import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.2c467624.js";const g=JSON.parse('{"title":"MongoDB聚合","description":"","frontmatter":{},"headers":[],"relativePath":"MongoDB/aggregate.md","filePath":"MongoDB/aggregate.md"}'),p={name:"MongoDB/aggregate.md"},o=l(`<h1 id="mongodb聚合" tabindex="-1">MongoDB聚合 <a class="header-anchor" href="#mongodb聚合" aria-label="Permalink to &quot;MongoDB聚合&quot;">​</a></h1><blockquote><p>aggregate() 主要用于处理数据（如统计平均值，求和等），并返回计算后的数据结果</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">db.posts.aggregate([</span><span style="color:#E1E4E8;">{$group: </span><span style="color:#9ECBFF;">{_id:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">$author</span><span style="color:#9ECBFF;">&quot;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">count:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;"> $sum</span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">}}}]</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 解释：</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">1.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">将查询到的</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">_id,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">count</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">作为一组</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">2.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">_id:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">引用文档中的author字段</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">3.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">count：</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">将分组查询后的结果求和</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 类比SQL</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> author, count(</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">) from posts group by author;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">db.posts.aggregate([</span><span style="color:#24292E;">{$group: </span><span style="color:#032F62;">{_id:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">$author</span><span style="color:#032F62;">&quot;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">count:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;"> $sum</span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#032F62;">}}}]</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 解释：</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">1.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">将查询到的</span><span style="color:#24292E;"> </span><span style="color:#032F62;">_id,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">count</span><span style="color:#24292E;"> </span><span style="color:#032F62;">作为一组</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">2.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">_id:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">引用文档中的author字段</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">3.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">count：</span><span style="color:#24292E;"> </span><span style="color:#032F62;">将分组查询后的结果求和</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 类比SQL</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">select</span><span style="color:#24292E;"> author, count(</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">) from posts group by author;</span></span></code></pre></div><h2 id="聚合表达式" tabindex="-1">聚合表达式 <a class="header-anchor" href="#聚合表达式" aria-label="Permalink to &quot;聚合表达式&quot;">​</a></h2><table><thead><tr><th>表达式</th><th>描述</th></tr></thead><tbody><tr><td>$sum</td><td>计算综合</td></tr><tr><td>$avg</td><td>计算平均值</td></tr><tr><td>$min</td><td>获取集合中所有文档对应的最小值</td></tr><tr><td>$max</td><td>获取集合中所有文档对应的最大值</td></tr><tr><td>$push</td><td>将值加入一个数组中，不会判断是否有重复的值</td></tr><tr><td>$addToSet</td><td>将值加入一个数组中，判断是否有重复的值；如果存在相同的值则不加入</td></tr><tr><td>$first</td><td>根据资源文档的排序获取第一个文档的数据</td></tr><tr><td>$first</td><td>根据资源文档的排序获取最后一个文档的数据</td></tr></tbody></table><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># $sum</span></span>
<span class="line"><span style="color:#B392F0;">db.posts.aggregate([</span><span style="color:#E1E4E8;">{$group: </span><span style="color:#9ECBFF;">{_id:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;$author&#39;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">total:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;">$sum</span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#9ECBFF;">}}}]</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;"># $avg</span></span>
<span class="line"><span style="color:#B392F0;">db.posts.aggregate([</span><span style="color:#E1E4E8;">{$group: </span><span style="color:#9ECBFF;">{_id:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;$author&#39;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">total:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;">$avg</span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;$likes&#39;}}}]</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;"># $min</span></span>
<span class="line"><span style="color:#B392F0;">db.posts.aggregate([</span><span style="color:#E1E4E8;">{$group: </span><span style="color:#9ECBFF;">{_id:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;$author&#39;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">total:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;">$min</span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;$likes&#39;}}}]</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;"># $max</span></span>
<span class="line"><span style="color:#B392F0;">db.posts.aggregate([</span><span style="color:#E1E4E8;">{$group: </span><span style="color:#9ECBFF;">{_id:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;$author&#39;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">total:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;">$max</span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;$likes&#39;}}}]</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;"># $push</span></span>
<span class="line"><span style="color:#B392F0;">db.posts.aggregate([</span><span style="color:#E1E4E8;">{$group: </span><span style="color:#9ECBFF;">{_id:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;$author&#39;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">url:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;">$push</span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;$url&#39;}}}]</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;"># $addToSet</span></span>
<span class="line"><span style="color:#B392F0;">db.posts.aggregate([</span><span style="color:#E1E4E8;">{$group: </span><span style="color:#9ECBFF;">{_id:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;$author&#39;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">url:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;">$addToSet</span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;$url&#39;}}}]</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;"># $first</span></span>
<span class="line"><span style="color:#B392F0;">db.posts.aggregate([</span><span style="color:#E1E4E8;">{$group: </span><span style="color:#9ECBFF;">{_id,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;$author&#39;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">first_url:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;">$first</span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;$url&#39;}}}]</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;"># $last</span></span>
<span class="line"><span style="color:#B392F0;">db.posts.aggregate([</span><span style="color:#E1E4E8;">{$group: </span><span style="color:#9ECBFF;">{_id,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;$author&#39;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">last_url:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;">$last</span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;$url&#39;}}}]</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># $sum</span></span>
<span class="line"><span style="color:#6F42C1;">db.posts.aggregate([</span><span style="color:#24292E;">{$group: </span><span style="color:#032F62;">{_id:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;$author&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">total:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;">$sum</span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#032F62;">}}}]</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;"># $avg</span></span>
<span class="line"><span style="color:#6F42C1;">db.posts.aggregate([</span><span style="color:#24292E;">{$group: </span><span style="color:#032F62;">{_id:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;$author&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">total:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;">$avg</span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;$likes&#39;}}}]</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;"># $min</span></span>
<span class="line"><span style="color:#6F42C1;">db.posts.aggregate([</span><span style="color:#24292E;">{$group: </span><span style="color:#032F62;">{_id:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;$author&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">total:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;">$min</span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;$likes&#39;}}}]</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;"># $max</span></span>
<span class="line"><span style="color:#6F42C1;">db.posts.aggregate([</span><span style="color:#24292E;">{$group: </span><span style="color:#032F62;">{_id:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;$author&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">total:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;">$max</span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;$likes&#39;}}}]</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;"># $push</span></span>
<span class="line"><span style="color:#6F42C1;">db.posts.aggregate([</span><span style="color:#24292E;">{$group: </span><span style="color:#032F62;">{_id:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;$author&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">url:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;">$push</span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;$url&#39;}}}]</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;"># $addToSet</span></span>
<span class="line"><span style="color:#6F42C1;">db.posts.aggregate([</span><span style="color:#24292E;">{$group: </span><span style="color:#032F62;">{_id:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;$author&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">url:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;">$addToSet</span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;$url&#39;}}}]</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;"># $first</span></span>
<span class="line"><span style="color:#6F42C1;">db.posts.aggregate([</span><span style="color:#24292E;">{$group: </span><span style="color:#032F62;">{_id,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;$author&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">first_url:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;">$first</span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;$url&#39;}}}]</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;"># $last</span></span>
<span class="line"><span style="color:#6F42C1;">db.posts.aggregate([</span><span style="color:#24292E;">{$group: </span><span style="color:#032F62;">{_id,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;$author&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">last_url:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;">$last</span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;$url&#39;}}}]</span><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="管道的概念" tabindex="-1">管道的概念 <a class="header-anchor" href="#管道的概念" aria-label="Permalink to &quot;管道的概念&quot;">​</a></h2><blockquote><p>MongoDB的聚合管道将文档在一个管道处理完毕后将结果传递给下一个管道处理。管道操作可以重复。</p></blockquote><ul><li>$project：修改输入文档的结构。用来重命名、增加或删除域，也可用于创建计算结果以及嵌套文档</li><li>$match：用于过滤数据，只输出符合条件的文档。使用MongoDB的标准查询操作</li><li>$limit：限制MongoDB聚合管道返回的文档数</li><li>$skip：在聚合管道中跳过指定数量的文档，并返回余下的文档</li><li>$group：将集合中的文档分组，可用于统计结果</li><li>$sort：将输入文档排序后输出</li><li>$unwind：将文档中的某一个数组类型字段拆分成多条，每条包含数组中的一个值</li><li>$geoNear：输入接近某一地理位置的有序文档</li></ul><p><strong>$match和$group同时存在时，应将<code>$match</code>写在前面</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">db.posts.aggregate([</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">  {$match: {</span><span style="color:#B392F0;">score:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;">$gt</span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> $lte</span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">90</span><span style="color:#9ECBFF;">}}},</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">  {$group: {</span><span style="color:#B392F0;">_id:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">null,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">count:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;">$sum </span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#9ECBFF;">}}}</span></span>
<span class="line"><span style="color:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">db.posts.aggregate(</span><span style="color:#E1E4E8;">{ $skip</span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">}</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">db.posts.aggregate(</span><span style="color:#E1E4E8;">{ $project</span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">title:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">author:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">}</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;"># 执行后，结果中只有_id,title,author三个字段了，默认情况下_id是被包含的</span></span>
<span class="line"><span style="color:#6A737D;"># 如果不包含_id，可以按照下面</span></span>
<span class="line"><span style="color:#B392F0;">db.posts.aggregate(</span><span style="color:#E1E4E8;">{ $project</span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">_id:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">title:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">author:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">}</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">db.posts.aggregate([</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">  {$match: {</span><span style="color:#6F42C1;">score:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;">$gt</span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> $lte</span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">90</span><span style="color:#032F62;">}}},</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">  {$group: {</span><span style="color:#6F42C1;">_id:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">null,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">count:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;">$sum </span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#032F62;">}}}</span></span>
<span class="line"><span style="color:#24292E;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">db.posts.aggregate(</span><span style="color:#24292E;">{ $skip</span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;"> </span><span style="color:#032F62;">}</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">db.posts.aggregate(</span><span style="color:#24292E;">{ $project</span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;"> </span><span style="color:#032F62;">title:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">author:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#032F62;">}</span><span style="color:#24292E;"> </span><span style="color:#032F62;">}</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;"># 执行后，结果中只有_id,title,author三个字段了，默认情况下_id是被包含的</span></span>
<span class="line"><span style="color:#6A737D;"># 如果不包含_id，可以按照下面</span></span>
<span class="line"><span style="color:#6F42C1;">db.posts.aggregate(</span><span style="color:#24292E;">{ $project</span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;"> </span><span style="color:#032F62;">_id:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">title:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">author:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#032F62;">}</span><span style="color:#24292E;"> </span><span style="color:#032F62;">}</span><span style="color:#24292E;">);</span></span></code></pre></div>`,11),t=[o];function e(r,c,E,y,F,i){return a(),n("div",null,t)}const C=s(p,[["render",e]]);export{g as __pageData,C as default};
