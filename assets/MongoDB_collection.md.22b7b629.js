import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.b68b6b1c.js";const F=JSON.parse('{"title":"collection 集合操作","description":"","frontmatter":{},"headers":[],"relativePath":"MongoDB/collection.md","filePath":"MongoDB/collection.md"}'),o={name:"MongoDB/collection.md"},p=l(`<h1 id="collection-集合操作" tabindex="-1">collection 集合操作 <a class="header-anchor" href="#collection-集合操作" aria-label="Permalink to &quot;collection 集合操作&quot;">​</a></h1><blockquote><p>不需要创建集合，当插入文档时，集合会自动创建。</p></blockquote><h2 id="创建集合" tabindex="-1">创建集合 <a class="header-anchor" href="#创建集合" aria-label="Permalink to &quot;创建集合&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 语法</span></span>
<span class="line"><span style="color:#B392F0;">db.createCollection(name,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">options</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 举例：</span></span>
<span class="line"><span style="color:#B392F0;">db.createCollection(</span><span style="color:#B392F0;">&#39;user&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">db.createCollection(</span><span style="color:#B392F0;">&#39;pic&#39;</span><span style="color:#B392F0;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">capped:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">size:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">6124800</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">max:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10000</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">}</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 语法</span></span>
<span class="line"><span style="color:#6F42C1;">db.createCollection(name,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">options</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 举例：</span></span>
<span class="line"><span style="color:#6F42C1;">db.createCollection(</span><span style="color:#6F42C1;">&#39;user&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">db.createCollection(</span><span style="color:#6F42C1;">&#39;pic&#39;</span><span style="color:#6F42C1;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;"> </span><span style="color:#032F62;">capped:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">size:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6124800</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">max:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10000</span><span style="color:#24292E;"> </span><span style="color:#032F62;">}</span><span style="color:#24292E;">)</span></span></code></pre></div><ul><li>name: 要创建的集合名称;</li><li>options: 可选参数，指定有关内存大小及索引的选项 <ol><li>capped: boolean. 如果为<code>true</code>，则创建固定集合。固定集合指的是有着固定大小的集合，当达到最大值时，会自动覆盖最早的文档。</li><li>size: 为固定集合指定一个最大值，即字节数。（<strong>capped: true时，size必填</strong>）</li><li>max: 指固定集合中包含文档的最大数量</li></ol></li></ul><h2 id="查看集合" tabindex="-1">查看集合 <a class="header-anchor" href="#查看集合" aria-label="Permalink to &quot;查看集合&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">collections</span></span>
<span class="line"><span style="color:#6A737D;"># 或</span></span>
<span class="line"><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tables</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">show</span><span style="color:#24292E;"> </span><span style="color:#032F62;">collections</span></span>
<span class="line"><span style="color:#6A737D;"># 或</span></span>
<span class="line"><span style="color:#6F42C1;">show</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tables</span></span></code></pre></div><h2 id="删除集合" tabindex="-1">删除集合 <a class="header-anchor" href="#删除集合" aria-label="Permalink to &quot;删除集合&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 语法</span></span>
<span class="line"><span style="color:#B392F0;">db.collection.drop</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># 举例</span></span>
<span class="line"><span style="color:#E1E4E8;">db.posts.drop()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 语法</span></span>
<span class="line"><span style="color:#6F42C1;">db.collection.drop</span><span style="color:#24292E;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># 举例</span></span>
<span class="line"><span style="color:#24292E;">db.posts.drop()</span></span></code></pre></div>`,9),e=[p];function c(t,r,i,y,d,E){return a(),n("div",null,e)}const b=s(o,[["render",c]]);export{F as __pageData,b as default};
