import{_ as n,o as a,c as l,O as p}from"./chunks/framework.54bd01e4.js";const i=JSON.parse('{"title":"document 文档操作","description":"","frontmatter":{},"headers":[],"relativePath":"MongoDB/document.md","filePath":"MongoDB/document.md"}'),o={name:"MongoDB/document.md"};function e(t,s,c,r,E,y){return a(),l("div",null,s[0]||(s[0]=[p(`<h1 id="document-文档操作" tabindex="-1">document 文档操作 <a class="header-anchor" href="#document-文档操作" aria-label="Permalink to &quot;document 文档操作&quot;">​</a></h1><h2 id="查询" tabindex="-1">查询 <a class="header-anchor" href="#查询" aria-label="Permalink to &quot;查询&quot;">​</a></h2><ol><li><p>语法</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 语法</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">db.user.find([query],</span><span style="color:#E1E4E8;"> [fields])</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 参数说明</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">query:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">可选，使用查询操作符指定查询条件</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">fields:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">可选，使用投影操作符指定返回的键。如果要查询所有键值，忽略此参数即可（默认省略）</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 语法</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">db.user.find([query],</span><span style="color:#24292E;"> [fields])</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 参数说明</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">-</span><span style="color:#24292E;"> </span><span style="color:#032F62;">query:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">可选，使用查询操作符指定查询条件</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">-</span><span style="color:#24292E;"> </span><span style="color:#032F62;">fields:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">可选，使用投影操作符指定返回的键。如果要查询所有键值，忽略此参数即可（默认省略）</span></span></code></pre></div></li><li><p>AND条件 OR条件</p><ul><li>AND：<code>db.user.find({name: &#39;张三&#39;, age: 22}).pretty()</code></li><li>OR: <code>db.user.find({$or: [{name: &#39;张三&#39;}, {age: 22}]}).pretty()</code></li><li>AND和OR联合使用：<code>db.user.find({likes: {$gt: 50}, $or: [{age: 22}, {sex: 1}]})</code>，类似SQL中<code>where likes &gt; 50 and (age = 22 or sex = 1)</code></li></ul></li><li><p>条件操作符</p><table><thead><tr><th>操作符</th><th>举例</th><th>类比SQL</th></tr></thead><tbody><tr><td>等于</td><td>db.user.find({name: &#39;小明&#39;})</td><td>where name = &#39;小明&#39;</td></tr><tr><td>不等于</td><td>db.user.find({age: {$ne: 20}})</td><td>where age != 20</td></tr><tr><td>大于</td><td>db.user.find({age: {$gt: 20}})</td><td>where age &gt; 20</td></tr><tr><td>大于等于</td><td>db.user.find({age: {$gte: 20}})</td><td>where age&gt;= 20</td></tr><tr><td>小于</td><td>db.user.find({age: {$lt:&gt; 20}})</td><td>where age &lt; 20</td></tr><tr><td>小于等于</td><td>db.user.find({age: {$lte: 20}})</td><td>where age &lt;= 20</td></tr></tbody></table></li><li><p><code>$type</code>操作符:<br><code>db.user.find({title: {$type: 2}})或db.user.find({title: {$type: &#39;string&#39;}})</code></p><table><thead><tr><th>类型</th><th>数字</th><th>备注</th></tr></thead><tbody><tr><td>Double</td><td>1</td><td></td></tr><tr><td>String</td><td>2</td><td></td></tr><tr><td>Object</td><td>3</td><td></td></tr><tr><td>Array</td><td>4</td><td></td></tr><tr><td>Binary Data</td><td>5</td><td></td></tr><tr><td>Undefined</td><td>6</td><td>已废弃</td></tr><tr><td>Object id</td><td>7</td><td></td></tr><tr><td>Boolean</td><td>8</td><td></td></tr><tr><td>Date</td><td>9</td><td></td></tr><tr><td>Null</td><td>10</td><td></td></tr><tr><td>Regular Expression</td><td>11</td><td></td></tr><tr><td>JavaScript</td><td>13</td><td></td></tr><tr><td>Symbol</td><td>14</td><td></td></tr><tr><td>JavaScript(with scope)</td><td>15</td><td></td></tr><tr><td>32-bit integer</td><td>16</td><td></td></tr><tr><td>Timestamp</td><td>17</td><td></td></tr><tr><td>64-bit integer</td><td>18</td><td></td></tr><tr><td>Min key</td><td>255</td><td>Query with -1</td></tr><tr><td>Max key</td><td>127</td><td></td></tr></tbody></table></li><li><p>查询总条数：<code>db.user.find().count()</code></p></li><li><p>分页查询：<code>skip：跳过几条</code>，<code>limit：查询条数</code>；<code>db.user.find().limit(10).skip(10)</code></p></li><li><p>排序：sort() -1为降序，1为升序; <code>db.user.find().sort({id: -1})</code></p></li></ol><h2 id="新增" tabindex="-1">新增 <a class="header-anchor" href="#新增" aria-label="Permalink to &quot;新增&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 语法</span></span>
<span class="line"><span style="color:#B392F0;">db.user.insert</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># 举例</span></span>
<span class="line"><span style="color:#E1E4E8;">db.user.insert({id: 1, name: &#39;小明&#39;, age: 20})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 语法</span></span>
<span class="line"><span style="color:#6F42C1;">db.user.insert</span><span style="color:#24292E;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># 举例</span></span>
<span class="line"><span style="color:#24292E;">db.user.insert({id: 1, name: &#39;小明&#39;, age: 20})</span></span></code></pre></div><h2 id="更新" tabindex="-1">更新 <a class="header-anchor" href="#更新" aria-label="Permalink to &quot;更新&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 语法</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">db.collection.update(&lt;query&gt;,</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">updat</span><span style="color:#E1E4E8;">e</span><span style="color:#F97583;">&gt;</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> [upsert, </span><span style="color:#9ECBFF;">multi,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">writeConcern]</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 新语法</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">db.collection.updateOne</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  db.collection.updateMany()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 参数说明</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">1.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">query:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">update的查询条件，类似SQL语法</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">where</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">2.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">update:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">update的对象和更新的操作符。</span><span style="color:#E1E4E8;">($set)</span><span style="color:#9ECBFF;">，类似SQL</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">update查询</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">set</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">后面的</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">3.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">upsert:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">可选，如果不存在update的记录，是否插入新记录。默认为</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">4.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">multi:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">可选，默认</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#9ECBFF;">，只更新找到的第一条记录；如果为</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">则把查询的多条记录都更新</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">5.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">writeConcern:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">可选，抛出异常的级别</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 举例</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">db.user.update(</span><span style="color:#E1E4E8;">{id: </span><span style="color:#79B8FF;">1</span><span style="color:#9ECBFF;">},</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;"> $set</span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{age:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">40</span><span style="color:#9ECBFF;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">}</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 语法</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">db.collection.update(&lt;query&gt;,</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">updat</span><span style="color:#24292E;">e</span><span style="color:#D73A49;">&gt;</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> [upsert, </span><span style="color:#032F62;">multi,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">writeConcern]</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 新语法</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">db.collection.updateOne</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  db.collection.updateMany()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 参数说明</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">1.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">query:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">update的查询条件，类似SQL语法</span><span style="color:#24292E;"> </span><span style="color:#032F62;">where</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">2.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">update:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">update的对象和更新的操作符。</span><span style="color:#24292E;">($set)</span><span style="color:#032F62;">，类似SQL</span><span style="color:#24292E;"> </span><span style="color:#032F62;">update查询</span><span style="color:#24292E;"> </span><span style="color:#032F62;">set</span><span style="color:#24292E;"> </span><span style="color:#032F62;">后面的</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">3.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">upsert:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">可选，如果不存在update的记录，是否插入新记录。默认为</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">4.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">multi:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">可选，默认</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#032F62;">，只更新找到的第一条记录；如果为</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span><span style="color:#032F62;">则把查询的多条记录都更新</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">5.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">writeConcern:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">可选，抛出异常的级别</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 举例</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">db.user.update(</span><span style="color:#24292E;">{id: </span><span style="color:#005CC5;">1</span><span style="color:#032F62;">},</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;"> $set</span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{age:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">40</span><span style="color:#032F62;">}</span><span style="color:#24292E;"> </span><span style="color:#032F62;">}</span><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="删除" tabindex="-1">删除 <a class="header-anchor" href="#删除" aria-label="Permalink to &quot;删除&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 语法</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">db.collection.remove(&lt;query&gt;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{justOne,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">writeConcern}</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;"># 或</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">db.collection.deleteOne</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  db.collection.deleteMany()</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">db.collection.findOneAndDelete</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  db.collection.bulkWrite()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 参数说明</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">1.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">query:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">可选，删除文档的条件</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">2.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">justOne:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">可选，如果设为true或1，则只删除一个文档；如果不设置参数，或使用默认参数false，则删除所有匹配的文档</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">3.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">writeConcern:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">可选，抛出异常的级别</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 举例：</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 删除所有age=20的数据</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">db.user.remove(</span><span style="color:#E1E4E8;">{age: </span><span style="color:#79B8FF;">20</span><span style="color:#9ECBFF;">}</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 删除age=20的1条数据</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">db.user.remove(</span><span style="color:#E1E4E8;">{age: </span><span style="color:#79B8FF;">20</span><span style="color:#9ECBFF;">},</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">db.user.remove(</span><span style="color:#E1E4E8;">{age: </span><span style="color:#79B8FF;">20</span><span style="color:#9ECBFF;">},</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 删除所有数据</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">db.user.remove(</span><span style="color:#E1E4E8;">{})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 语法</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">db.collection.remove(&lt;query&gt;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{justOne,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">writeConcern}</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;"># 或</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">db.collection.deleteOne</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  db.collection.deleteMany()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">db.collection.findOneAndDelete</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  db.collection.bulkWrite()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 参数说明</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">1.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">query:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">可选，删除文档的条件</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">2.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">justOne:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">可选，如果设为true或1，则只删除一个文档；如果不设置参数，或使用默认参数false，则删除所有匹配的文档</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">3.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">writeConcern:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">可选，抛出异常的级别</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 举例：</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 删除所有age=20的数据</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">db.user.remove(</span><span style="color:#24292E;">{age: </span><span style="color:#005CC5;">20</span><span style="color:#032F62;">}</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 删除age=20的1条数据</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">db.user.remove(</span><span style="color:#24292E;">{age: </span><span style="color:#005CC5;">20</span><span style="color:#032F62;">},</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">db.user.remove(</span><span style="color:#24292E;">{age: </span><span style="color:#005CC5;">20</span><span style="color:#032F62;">},</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 删除所有数据</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">db.user.remove(</span><span style="color:#24292E;">{})</span></span></code></pre></div>`,9)]))}const F=n(o,[["render",e]]);export{i as __pageData,F as default};
